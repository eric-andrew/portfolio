!function(){var e=document.getElementsByClassName("back-to-top")[0],n=document.getElementsByClassName("skills_values")[0],t=document.getElementById("skills_values");function o(e){window.scrollTo({behavior:"smooth",left:0,top:e.offsetTop})}workLi=document.getElementsByClassName("work_link")[0],workSection=document.getElementById("work"),e&&e.addEventListener("click",function(e){var o,i,l,a;e.preventDefault(),window.requestAnimationFrame?(o=700,i=window.scrollY||document.documentElement.scrollTop,l=null,a=function(e){l||(l=e);var n=e-l,t=Math.max(Math.easeInOutQuad(n,i,-i,o),0);window.scrollTo(0,t),n<o&&window.requestAnimationFrame(a)},window.requestAnimationFrame(a)):window.scrollTo(0,0)}),n&&n.addEventListener("click",function(e){e.preventDefault(),window.requestAnimationFrame?o(t):window.scrollTo(0,0)}),workLi&&workLi.addEventListener("click",function(e){e.preventDefault(),window.requestAnimationFrame?o(workSection):window.scrollTo(0,0)}),Math.easeInOutQuad=function(e,n,t,o){return(e/=o/2)<1?t/2*e*e+n:-t/2*(--e*(e-2)-1)+n}}();
(function(){
	var backToTop = document.getElementsByClassName('back-to-top')[0],
		scrollDuration = 700,
		scrolling = false,
		workLi = document.getElementsByClassName('work_link')[0];
		workSection = document.getElementById('work');

	if( backToTop ) {
		backToTop.addEventListener('click', function(event) {
			event.preventDefault();
			(!window.requestAnimationFrame) ? window.scrollTo(0, 0) : scrollTop(scrollDuration);
		});
	}

	if( workLi ) {
		workLi.addEventListener('click', function(event) {
			event.preventDefault();
			(!window.requestAnimationFrame) ? window.scrollTo(0, 0) : scrollToSection(workSection);
		});
	}

	if(window.location.hash) {
	    var hash = window.location.hash,
         id   = hash.slice(1),
         elem = document.getElementById(id);
	    
	    scroll(0,0);
		setTimeout(function(){scroll(0,0);},1);

		setTimeout( function(){ 
			scrollToSection(elem); 
		}, 1000);

	}

	function scrollToSection(element) {
		window.scrollTo({
    		'behavior': 'smooth',
	    	'left': 0,
	    	'top': element.offsetTop
	 	});
	}

	function scrollTop(duration) {
	    var start = window.scrollY || document.documentElement.scrollTop,
	        currentTime = null;

	    var animateScroll = function(timestamp){
	    	if (!currentTime) currentTime = timestamp;
	        var progress = timestamp - currentTime;
	        var val = Math.max(Math.easeInOutQuad(progress, start, -start, duration), 0);
	        window.scrollTo(0, val);
	        if(progress < duration) {
	            window.requestAnimationFrame(animateScroll);
	        }
	    };

	    window.requestAnimationFrame(animateScroll);
	}

	Math.easeInOutQuad = function (t, b, c, d) {
 		t /= d/2;
		if (t < 1) return c/2*t*t + b;
		t--;
		return -c/2 * (t*(t-2) - 1) + b;
	};

	//class manipulations - needed if classList is not supported
	function hasClass(el, className) {
	  	if (el.classList) return el.classList.contains(className);
	  	else return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'));
	}
	function addClass(el, className) {
		var classList = className.split(' ');
	 	if (el.classList) el.classList.add(classList[0]);
	 	else if (!hasClass(el, classList[0])) el.className += " " + classList[0];
	 	if (classList.length > 1) addClass(el, classList.slice(1).join(' '));
	}
	function removeClass(el, className) {
		var classList = className.split(' ');
	  	if (el.classList) el.classList.remove(classList[0]);
	  	else if(hasClass(el, classList[0])) {
	  		var reg = new RegExp('(\\s|^)' + classList[0] + '(\\s|$)');
	  		el.className=el.className.replace(reg, ' ');
	  	}
	  	if (classList.length > 1) removeClass(el, classList.slice(1).join(' '));
	}
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5taW4uanMiLCJzY3JpcHQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYmFjay10by10b3BcIilbMF0sbj1kb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2tpbGxzX3ZhbHVlc1wiKVswXSx0PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2tpbGxzX3ZhbHVlc1wiKTtmdW5jdGlvbiBvKGUpe3dpbmRvdy5zY3JvbGxUbyh7YmVoYXZpb3I6XCJzbW9vdGhcIixsZWZ0OjAsdG9wOmUub2Zmc2V0VG9wfSl9d29ya0xpPWRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJ3b3JrX2xpbmtcIilbMF0sd29ya1NlY3Rpb249ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3b3JrXCIpLGUmJmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oZSl7dmFyIG8saSxsLGE7ZS5wcmV2ZW50RGVmYXVsdCgpLHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/KG89NzAwLGk9d2luZG93LnNjcm9sbFl8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AsbD1udWxsLGE9ZnVuY3Rpb24oZSl7bHx8KGw9ZSk7dmFyIG49ZS1sLHQ9TWF0aC5tYXgoTWF0aC5lYXNlSW5PdXRRdWFkKG4saSwtaSxvKSwwKTt3aW5kb3cuc2Nyb2xsVG8oMCx0KSxuPG8mJndpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYSl9LHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYSkpOndpbmRvdy5zY3JvbGxUbygwLDApfSksbiYmbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZT9vKHQpOndpbmRvdy5zY3JvbGxUbygwLDApfSksd29ya0xpJiZ3b3JrTGkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/byh3b3JrU2VjdGlvbik6d2luZG93LnNjcm9sbFRvKDAsMCl9KSxNYXRoLmVhc2VJbk91dFF1YWQ9ZnVuY3Rpb24oZSxuLHQsbyl7cmV0dXJuKGUvPW8vMik8MT90LzIqZSplK246LXQvMiooLS1lKihlLTIpLTEpK259fSgpOyIsIihmdW5jdGlvbigpe1xuXHR2YXIgYmFja1RvVG9wID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYmFjay10by10b3AnKVswXSxcblx0XHRzY3JvbGxEdXJhdGlvbiA9IDcwMCxcblx0XHRzY3JvbGxpbmcgPSBmYWxzZSxcblx0XHR3b3JrTGkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd3b3JrX2xpbmsnKVswXTtcblx0XHR3b3JrU2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3b3JrJyk7XG5cblx0aWYoIGJhY2tUb1RvcCApIHtcblx0XHRiYWNrVG9Ub3AuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdCghd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkgPyB3aW5kb3cuc2Nyb2xsVG8oMCwgMCkgOiBzY3JvbGxUb3Aoc2Nyb2xsRHVyYXRpb24pO1xuXHRcdH0pO1xuXHR9XG5cblx0aWYoIHdvcmtMaSApIHtcblx0XHR3b3JrTGkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdCghd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkgPyB3aW5kb3cuc2Nyb2xsVG8oMCwgMCkgOiBzY3JvbGxUb1NlY3Rpb24od29ya1NlY3Rpb24pO1xuXHRcdH0pO1xuXHR9XG5cblx0aWYod2luZG93LmxvY2F0aW9uLmhhc2gpIHtcblx0ICAgIHZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2gsXG4gICAgICAgICBpZCAgID0gaGFzaC5zbGljZSgxKSxcbiAgICAgICAgIGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG5cdCAgICBcblx0ICAgIHNjcm9sbCgwLDApO1xuXHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKXtzY3JvbGwoMCwwKTt9LDEpO1xuXG5cdFx0c2V0VGltZW91dCggZnVuY3Rpb24oKXsgXG5cdFx0XHRzY3JvbGxUb1NlY3Rpb24oZWxlbSk7IFxuXHRcdH0sIDEwMDApO1xuXG5cdH1cblxuXHRmdW5jdGlvbiBzY3JvbGxUb1NlY3Rpb24oZWxlbWVudCkge1xuXHRcdHdpbmRvdy5zY3JvbGxUbyh7XG4gICAgXHRcdCdiZWhhdmlvcic6ICdzbW9vdGgnLFxuXHQgICAgXHQnbGVmdCc6IDAsXG5cdCAgICBcdCd0b3AnOiBlbGVtZW50Lm9mZnNldFRvcFxuXHQgXHR9KTtcblx0fVxuXG5cdGZ1bmN0aW9uIHNjcm9sbFRvcChkdXJhdGlvbikge1xuXHQgICAgdmFyIHN0YXJ0ID0gd2luZG93LnNjcm9sbFkgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCxcblx0ICAgICAgICBjdXJyZW50VGltZSA9IG51bGw7XG5cblx0ICAgIHZhciBhbmltYXRlU2Nyb2xsID0gZnVuY3Rpb24odGltZXN0YW1wKXtcblx0ICAgIFx0aWYgKCFjdXJyZW50VGltZSkgY3VycmVudFRpbWUgPSB0aW1lc3RhbXA7XG5cdCAgICAgICAgdmFyIHByb2dyZXNzID0gdGltZXN0YW1wIC0gY3VycmVudFRpbWU7XG5cdCAgICAgICAgdmFyIHZhbCA9IE1hdGgubWF4KE1hdGguZWFzZUluT3V0UXVhZChwcm9ncmVzcywgc3RhcnQsIC1zdGFydCwgZHVyYXRpb24pLCAwKTtcblx0ICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgdmFsKTtcblx0ICAgICAgICBpZihwcm9ncmVzcyA8IGR1cmF0aW9uKSB7XG5cdCAgICAgICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZVNjcm9sbCk7XG5cdCAgICAgICAgfVxuXHQgICAgfTtcblxuXHQgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlU2Nyb2xsKTtcblx0fVxuXG5cdE1hdGguZWFzZUluT3V0UXVhZCA9IGZ1bmN0aW9uICh0LCBiLCBjLCBkKSB7XG4gXHRcdHQgLz0gZC8yO1xuXHRcdGlmICh0IDwgMSkgcmV0dXJuIGMvMip0KnQgKyBiO1xuXHRcdHQtLTtcblx0XHRyZXR1cm4gLWMvMiAqICh0Kih0LTIpIC0gMSkgKyBiO1xuXHR9O1xuXG5cdC8vY2xhc3MgbWFuaXB1bGF0aW9ucyAtIG5lZWRlZCBpZiBjbGFzc0xpc3QgaXMgbm90IHN1cHBvcnRlZFxuXHRmdW5jdGlvbiBoYXNDbGFzcyhlbCwgY2xhc3NOYW1lKSB7XG5cdCAgXHRpZiAoZWwuY2xhc3NMaXN0KSByZXR1cm4gZWwuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG5cdCAgXHRlbHNlIHJldHVybiAhIWVsLmNsYXNzTmFtZS5tYXRjaChuZXcgUmVnRXhwKCcoXFxcXHN8XiknICsgY2xhc3NOYW1lICsgJyhcXFxcc3wkKScpKTtcblx0fVxuXHRmdW5jdGlvbiBhZGRDbGFzcyhlbCwgY2xhc3NOYW1lKSB7XG5cdFx0dmFyIGNsYXNzTGlzdCA9IGNsYXNzTmFtZS5zcGxpdCgnICcpO1xuXHQgXHRpZiAoZWwuY2xhc3NMaXN0KSBlbC5jbGFzc0xpc3QuYWRkKGNsYXNzTGlzdFswXSk7XG5cdCBcdGVsc2UgaWYgKCFoYXNDbGFzcyhlbCwgY2xhc3NMaXN0WzBdKSkgZWwuY2xhc3NOYW1lICs9IFwiIFwiICsgY2xhc3NMaXN0WzBdO1xuXHQgXHRpZiAoY2xhc3NMaXN0Lmxlbmd0aCA+IDEpIGFkZENsYXNzKGVsLCBjbGFzc0xpc3Quc2xpY2UoMSkuam9pbignICcpKTtcblx0fVxuXHRmdW5jdGlvbiByZW1vdmVDbGFzcyhlbCwgY2xhc3NOYW1lKSB7XG5cdFx0dmFyIGNsYXNzTGlzdCA9IGNsYXNzTmFtZS5zcGxpdCgnICcpO1xuXHQgIFx0aWYgKGVsLmNsYXNzTGlzdCkgZWwuY2xhc3NMaXN0LnJlbW92ZShjbGFzc0xpc3RbMF0pO1xuXHQgIFx0ZWxzZSBpZihoYXNDbGFzcyhlbCwgY2xhc3NMaXN0WzBdKSkge1xuXHQgIFx0XHR2YXIgcmVnID0gbmV3IFJlZ0V4cCgnKFxcXFxzfF4pJyArIGNsYXNzTGlzdFswXSArICcoXFxcXHN8JCknKTtcblx0ICBcdFx0ZWwuY2xhc3NOYW1lPWVsLmNsYXNzTmFtZS5yZXBsYWNlKHJlZywgJyAnKTtcblx0ICBcdH1cblx0ICBcdGlmIChjbGFzc0xpc3QubGVuZ3RoID4gMSkgcmVtb3ZlQ2xhc3MoZWwsIGNsYXNzTGlzdC5zbGljZSgxKS5qb2luKCcgJykpO1xuXHR9XG59KSgpO1xuIl19
